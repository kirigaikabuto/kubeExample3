name: Build and Deploy to Dev

on:
  push:
    branches:
      - dev   # деплой при пуше в ветку dev

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/my-go-api

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run tests
        run: |
          go test ./...        # добавь тесты по мере необходимости

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # РЕКОМЕНДУЮ: создать Personal Access Token с правами write:packages -> сохранить в секрет GHCR_PAT
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

      - name: set-image
        id: set-image
        run: echo "::set-output name=image::${{ env.IMAGE_NAME }}:${{ github.sha }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for manifests)
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubeconfig
        # В GH secret положи base64-encoded kubeconfig в KUBECONFIG_DEV
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DEV }}" | base64 --decode > $HOME/.kube/config

      - name: Ensure namespace
        run: kubectl apply -f k8s/namespace.yaml

      - name: Apply service & deployment (initial)
        run: |
          # применим сервис и деплой (deployment содержит image: ...:latest)
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml

      - name: Update deployment image to exact tag
        run: |
          IMAGE=${{ env.IMAGE_NAME }}:${{ github.sha }}
          kubectl -n dev set image deployment/my-go-api my-go-api=$IMAGE
          kubectl -n dev rollout status deployment/my-go-api --timeout=90s
